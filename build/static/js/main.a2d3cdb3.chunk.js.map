{"version":3,"sources":["Context.js","components/Header.js","hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","utils/index.js","pages/Photos.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","fetch","then","response","json","data","Provider","value","toggleFavorite","id","updateArr","map","photo","isFavorite","addToCart","newItem","prevItems","removeFromCart","filter","item","emptyCart","successMsg","Swal","fire","Header","useContext","to","length","className","useHover","hovered","setHovered","ref","useRef","enter","leave","current","addEventListener","CartItem","delIcon","onClick","src","url","width","Cart","cartText","setCartText","displayCost","toLocaleString","style","currency","cartItemElements","setTimeout","console","log","Image","img","some","getClass","i","Photos","imageElement","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2d3cdb3.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\n// ES6 Modules or TypeScript\r\nimport Swal from 'sweetalert2'\r\n\r\nconst Context = React.createContext()\r\n\r\nfunction ContextProvider({children}){\r\n    const [allPhotos, setAllPhotos] = useState([])\r\n    const [cartItems, setCartItems] = useState([])\r\n    \r\n    const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\"\r\n    \r\n    useEffect(() => {\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => setAllPhotos(data))\r\n    }, [])\r\n    \r\n    function toggleFavorite(id){\r\n        // Loop through photo array to see if the `id` matches with the given images' `id`\r\n        const updateArr = allPhotos.map(photo => {\r\n            if(photo.id === id){\r\n                return{\r\n                    ...photo, // grab all properties of `photo` object\r\n                    isFavorite: !photo.isFavorite // alter `isFavorite` property \r\n                }\r\n            }\r\n            return photo // simply return the photo if `id` doesn't match \r\n        })\r\n        \r\n        setAllPhotos(updateArr)\r\n    }\r\n    \r\n    function addToCart(newItem){\r\n        setCartItems(prevItems => [...prevItems, newItem])\r\n    }\r\n    \r\n    function removeFromCart(id){\r\n        // Return a new array consisting all the images except the images with matched `id`\r\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id))    \r\n    }\r\n    \r\n    function emptyCart(){\r\n        setCartItems([])\r\n    }\r\n\r\n    function successMsg(){\r\n        Swal.fire(\r\n            'Congrats!',\r\n            'You successfully placed an order!',\r\n            'success'\r\n        )\r\n    }\r\n    \r\n    // console.log(cartItems)\r\n    \r\n    return(\r\n        // Anything (State/Method) comes from Context needs to be passed via `value` prop to be used in other Components of our App.\r\n        <Context.Provider value={{\r\n            allPhotos, \r\n            toggleFavorite, \r\n            addToCart, \r\n            removeFromCart, \r\n            emptyCart,\r\n            successMsg, \r\n            cartItems}}\r\n        > \r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context}","import React, {useContext} from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {Context} from \"../Context\"\r\n\r\nfunction Header() {\r\n    const {cartItems} = useContext(Context)\r\n    \r\n    function headerCartIcon(){\r\n        if(cartItems.length>0){\r\n            return <i className=\"ri-shopping-cart-fill ri-fw ri-2x\"></i> \r\n        }else{\r\n            return <i className=\"ri-shopping-cart-line ri-fw ri-2x\"></i> \r\n        }    \r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <header>\r\n                <h2><Link to=\"/\">Pic Some</Link></h2>\r\n                <Link to=\"/cart\">{headerCartIcon()}</Link>\r\n            </header>\r\n            \r\n            \r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {useState, useEffect, useRef} from \"react\"\r\n\r\nfunction useHover(){\r\n    const [hovered, setHovered] = useState(false)\r\n    const ref = useRef(null)\r\n    \r\n    function enter(){\r\n        setHovered(true)\r\n    }\r\n    \r\n    function leave(){\r\n        setHovered(false)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        // Add event listeners when components first mounts\r\n        ref.current.addEventListener(\"mouseenter\", enter)\r\n        ref.current.addEventListener(\"mouseleave\", leave)\r\n        \r\n        // Remove event listeners when components unmounts \r\n        // return () => {\r\n        //     ref.current.removeEventListener(\"mouseenter\", enter)\r\n        //     ref.current.removeEventListener(\"mouseleave\", leave)\r\n        // }\r\n    }, [])\r\n    \r\n    return [hovered, ref]\r\n}\r\n\r\nexport default useHover","import React, {useState, useContext} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {Context} from \"../Context\"\r\nimport useHover from \"../hooks/useHover\"\r\n\r\nfunction CartItem({item}){\r\n    // const [hovered, setHovered] = useState(false)\r\n    \r\n    const [hovered, ref] = useHover()\r\n    const {removeFromCart} = useContext(Context)\r\n    const delIcon = hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\" \r\n    return(\r\n        <div className=\"cart-item\">\r\n            <i \r\n                onClick={() => removeFromCart(item.id)} \r\n                className={delIcon}\r\n                ref={ref}\r\n            >\r\n            </i>\r\n            <img src={item.url} width=\"130px\" />\r\n            <p>$5.99</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nCartItem.propTypes = {\r\n    item: PropTypes.shape({\r\n        url: PropTypes.string.isRequired\r\n    })\r\n}\r\n\r\nexport default CartItem","import React, {useState, useContext} from \"react\"\r\nimport {Context} from \"../Context\"\r\nimport CartItem from \"../components/CartItem\"\r\n// ES6 Modules or TypeScript\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nfunction Cart() {\r\n    const [cartText, setCartText] = useState(\"Place Order\") \r\n    const {cartItems, emptyCart, successMsg} = useContext(Context)\r\n    \r\n    const totalCost = cartItems.length * 5.99\r\n    const displayCost = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\r\n    \r\n    const cartItemElements = cartItems.map(item => (\r\n        <CartItem key={item.id} item={item} />\r\n    ))\r\n    \r\n    function handleOrder(){\r\n        setCartText(\"Ordering...\")\r\n        setTimeout(()=>{\r\n            console.log(\"Order Placed!\")\r\n            setCartText(\"Place Order\")\r\n            successMsg()\r\n            emptyCart()\r\n        }, 3000)   \r\n    }\r\n    \r\n    return (\r\n        <main className=\"cart-page\">\r\n            <h1>Check out</h1>\r\n            {cartItemElements}\r\n            <p className=\"total-cost\">Total: {displayCost}</p>\r\n            {\r\n                cartItems.length > 0 ?\r\n                <div className=\"order-button\">\r\n                <button onClick = {handleOrder}>{cartText}</button>\r\n                </div> :\r\n                <p>You have no item in the cart!</p> \r\n            }\r\n           \r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Cart","import React, {useState, useContext} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {Context} from \"../Context\"\r\nimport useHover from \"../hooks/useHover\"\r\n\r\n// Passing `className`, `img` props from Photos component\r\nfunction Image({className, img}){\r\n    // const [hovered, setHovered] = useState(false)\r\n    \r\n    const [hovered, ref] = useHover()\r\n    // Passing Context Provider value props\r\n    const {toggleFavorite, addToCart, removeFromCart, cartItems} = useContext(Context)\r\n    \r\n    function heartIcon(){\r\n        if(img.isFavorite){\r\n            return <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-fill favorite\"></i> \r\n        } else if(hovered) {\r\n            return <i onClick={() => toggleFavorite(img.id)} className=\"ri-heart-line favorite\"></i> \r\n        }\r\n    }\r\n   \r\n    function cartIcon(){\r\n        // Holds an array of boolean `true` & `false` value. `true` means - item is already in cart \r\n        const alreadyInCart = cartItems.some(item => item.id === img.id)\r\n        \r\n        if(alreadyInCart){\r\n            return <i onClick={() => removeFromCart(img.id)} className=\"ri-shopping-cart-fill cart\"></i>\r\n        }else if(hovered){\r\n            return <i onClick={() => addToCart(img)} className=\"ri-add-circle-line cart\"></i>\r\n        }\r\n    }\r\n    \r\n    return(\r\n       \r\n        <div \r\n            className={`${className} image-container`}\r\n            ref={ref}\r\n        >\r\n            <img src={img.url} className=\"image-grid\"/>\r\n            { heartIcon() }\r\n            { cartIcon() }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nImage.propTypes = {\r\n    className: PropTypes.string,\r\n    img: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        url: PropTypes.string.isRequired,\r\n        isFavorite: PropTypes.bool\r\n    })\r\n}\r\n\r\n\r\n\r\nexport default Image","export function getClass(i) {\r\n    if (i % 5 === 0) {\r\n        return 'big';\r\n    }\r\n    else if (i % 6 === 0) {\r\n        return 'wide'\r\n    }\r\n}","import React, {useContext} from \"react\"\r\nimport Image from \"../components/Image\"\r\nimport {Context} from \"../Context\"\r\nimport {getClass} from \"../utils\"\r\n\r\n\r\nfunction Photos() {\r\n    // Getting the array of all photos from context\r\n    const {allPhotos} = useContext(Context)\r\n    \r\n    // Creating Image component and mapping over all photos\r\n    const imageElement = allPhotos.map((img, i) => (\r\n        // Passing entiner image object(id, url,isfavorited) through `img` prop\r\n        <Image key={img.id} img={img} className={getClass(i)} /> //getClass(i) is a JS function that assigns 'big' class to every 5th image element and 'wide' class to every 6th image element  \r\n    ))\r\n    \r\n    return (\r\n        <main className=\"photos\">\r\n            {imageElement}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Photos","import React from \"react\"\nimport Header from \"./components/Header\"\nimport Cart from \"./pages/Cart\"\nimport Photos from \"./pages/Photos\"\nimport {Switch, Route} from \"react-router-dom\"\n\nfunction App() {    \n    return (\n        <div>\n            <Header />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Photos/>\n                </Route>\n                \n                <Route path=\"/cart\">\n                    <Cart/>\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {ContextProvider} from \"./Context\"\nimport './App.css';\n\nimport App from \"./App\"\n\nReactDOM.render(\n    <ContextProvider>\n        <Router>\n            <App />\n        </Router>\n    </ContextProvider>, \n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}